
// CLEARFIX
// Forces element to clear floated children
//
%cf
{
	*zoom:1;
	
	&:before,
	&:after
	{
		content: " ";
		display: table;
	}
	
	&:after
	{
		clear:both;
	}
}


// MIXIN: BOX
// Creates a flexbox-like environment that's friendly to older browsers.
//
@mixin box($align: left, $reverse: false, $cc: "> :first-child", $items: "> *")
{
	
	$inner-float: left !default;
	$outer-float: left !default;
	
	@if $reverse
	{
		$inner-float: right;
	}
	
	$justify: null !default;
	$direction: null !default;
	
	@if $align == left
	{
		@if $reverse
		{
			$direction: row-reverse;
			$justify: flex-end;
		}
	}
	@elseif $align == right
	{
		@if $reverse
		{
			$direction: row-reverse;
		}
		@else
		{
			$justify: flex-end;
		}
		
		$outer-float: right;
	}
	@elseif $align == start or $align == flex-start
	{
		$justify: flex-start;
		@if $reverse
		{
			$direction: row-reverse;
			$outer-float: right;
		}
	}
	@elseif $align == end or $align == flex-end
	{
		$justify: flex-end;
		@if $reverse
		{
			$direection: row-reverse;
		}
		
		@else
		{
			$outer-float: right;
		}
	}
	@elseif $align == center
	{
		$justify: center;
	}
	@elseif $align == space-around or $align == space-between
	{
		@warn "IE<10 and other old browsers will not work with $align set to #{$align}.";
		$justify: $align;
	}
	
	html.flexbox & #{$cc},
	html.flexboxlegacy & #{$cc}
	{
		display: flex;
		flex-direction: $direction;
		justify-content: $justify;
	}
	
	html.no-flexbox.no-flexboxlegacy &
	{
		@at-root (with: rule)
		{
			@extend %cf;
		}
		
		#{$cc}
		{
			@at-root (with: rule)
			{
				@extend %cf;
			}
			
			@if $align == center
			{
				margin: 0 auto;
			}
			@else
			{
				float: $outer-float;
			}
			
			#{$items}
			{
				float: $inner-float;
			}
		}
	}
	
}
